<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="730" onload="init(evt)" viewBox="0 0 1200 730" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="730" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python3 core.py --txs 7000 --netsize 10 --printing False --seed 1</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="719.00"> </text><svg id="frames" x="10" width="1180" total_samples="7608"><g><title>setup (simulation/simulation_multi_agent.py:113) (78 samples, 1.03%)</title><rect x="0.0000%" y="84" width="1.0252%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="78"/><text x="0.2500%" y="94.50"></text></g><g><title>LoadImageIntoGraph (simulation/mapMaker.py:381) (78 samples, 1.03%)</title><rect x="0.0000%" y="100" width="1.0252%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="78"/><text x="0.2500%" y="110.50"></text></g><g><title>setup (simulation/simulation_multi_agent.py:184) (41 samples, 0.54%)</title><rect x="1.0647%" y="84" width="0.5389%" height="15" fill="rgb(221,193,54)" fg:x="81" fg:w="41"/><text x="1.3147%" y="94.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;:5) (13 samples, 0.17%)</title><rect x="1.4327%" y="100" width="0.1709%" height="15" fill="rgb(248,212,6)" fg:x="109" fg:w="13"/><text x="1.6827%" y="110.50"></text></g><g><title>prod (numpy/core/fromnumeric.py:3051) (13 samples, 0.17%)</title><rect x="1.4327%" y="116" width="0.1709%" height="15" fill="rgb(208,68,35)" fg:x="109" fg:w="13"/><text x="1.6827%" y="126.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (9 samples, 0.12%)</title><rect x="1.4853%" y="132" width="0.1183%" height="15" fill="rgb(232,128,0)" fg:x="113" fg:w="9"/><text x="1.7353%" y="142.50"></text></g><g><title>_dijkstra_multisource (networkx/algorithms/shortest_paths/weighted.py:840) (16 samples, 0.21%)</title><rect x="2.1425%" y="164" width="0.2103%" height="15" fill="rgb(207,160,47)" fg:x="163" fg:w="16"/><text x="2.3925%" y="174.50"></text></g><g><title>_dijkstra_multisource (networkx/algorithms/shortest_paths/weighted.py:846) (21 samples, 0.28%)</title><rect x="2.5762%" y="164" width="0.2760%" height="15" fill="rgb(228,23,34)" fg:x="196" fg:w="21"/><text x="2.8262%" y="174.50"></text></g><g><title>_dijkstra_multisource (networkx/algorithms/shortest_paths/weighted.py:847) (25 samples, 0.33%)</title><rect x="2.8523%" y="164" width="0.3286%" height="15" fill="rgb(218,30,26)" fg:x="217" fg:w="25"/><text x="3.1023%" y="174.50"></text></g><g><title>&lt;lambda&gt; (networkx/algorithms/shortest_paths/weighted.py:78) (9 samples, 0.12%)</title><rect x="3.0626%" y="180" width="0.1183%" height="15" fill="rgb(220,122,19)" fg:x="233" fg:w="9"/><text x="3.3126%" y="190.50"></text></g><g><title>_dijkstra_multisource (networkx/algorithms/shortest_paths/weighted.py:850) (25 samples, 0.33%)</title><rect x="3.1940%" y="164" width="0.3286%" height="15" fill="rgb(250,228,42)" fg:x="243" fg:w="25"/><text x="3.4440%" y="174.50"></text></g><g><title>_dijkstra_multisource (networkx/algorithms/shortest_paths/weighted.py:854) (9 samples, 0.12%)</title><rect x="3.5752%" y="164" width="0.1183%" height="15" fill="rgb(240,193,28)" fg:x="272" fg:w="9"/><text x="3.8252%" y="174.50"></text></g><g><title>_dijkstra_multisource (networkx/algorithms/shortest_paths/weighted.py:860) (9 samples, 0.12%)</title><rect x="3.7723%" y="164" width="0.1183%" height="15" fill="rgb(216,20,37)" fg:x="287" fg:w="9"/><text x="4.0223%" y="174.50"></text></g><g><title>_dijkstra_multisource (networkx/algorithms/shortest_paths/weighted.py:862) (21 samples, 0.28%)</title><rect x="3.9169%" y="164" width="0.2760%" height="15" fill="rgb(206,188,39)" fg:x="298" fg:w="21"/><text x="4.1669%" y="174.50"></text></g><g><title>_dijkstra_multisource (networkx/algorithms/shortest_paths/weighted.py:864) (9 samples, 0.12%)</title><rect x="4.2061%" y="164" width="0.1183%" height="15" fill="rgb(217,207,13)" fg:x="320" fg:w="9"/><text x="4.4561%" y="174.50"></text></g><g><title>_dijkstra_multisource (networkx/algorithms/shortest_paths/weighted.py:865) (12 samples, 0.16%)</title><rect x="4.3244%" y="164" width="0.1577%" height="15" fill="rgb(231,73,38)" fg:x="329" fg:w="12"/><text x="4.5744%" y="174.50"></text></g><g><title>multi_source_dijkstra (networkx/algorithms/shortest_paths/weighted.py:748) (191 samples, 2.51%)</title><rect x="2.0110%" y="148" width="2.5105%" height="15" fill="rgb(225,20,46)" fg:x="153" fg:w="191"/><text x="2.2610%" y="158.50">mu..</text></g><g><title>traveling_salesman_problem (networkx/algorithms/approximation/traveling_salesman.py:303) (218 samples, 2.87%)</title><rect x="1.6824%" y="100" width="2.8654%" height="15" fill="rgb(210,31,41)" fg:x="128" fg:w="218"/><text x="1.9324%" y="110.50">tr..</text></g><g><title>all_pairs_dijkstra (networkx/algorithms/shortest_paths/weighted.py:1012) (214 samples, 2.81%)</title><rect x="1.7350%" y="116" width="2.8128%" height="15" fill="rgb(221,200,47)" fg:x="132" fg:w="214"/><text x="1.9850%" y="126.50">al..</text></g><g><title>single_source_dijkstra (networkx/algorithms/shortest_paths/weighted.py:481) (213 samples, 2.80%)</title><rect x="1.7482%" y="132" width="2.7997%" height="15" fill="rgb(226,26,5)" fg:x="133" fg:w="213"/><text x="1.9982%" y="142.50">si..</text></g><g><title>minimum_spanning_tree (networkx/algorithms/tree/mst.py:605) (13 samples, 0.17%)</title><rect x="4.9553%" y="148" width="0.1709%" height="15" fill="rgb(249,33,26)" fg:x="377" fg:w="13"/><text x="5.2053%" y="158.50"></text></g><g><title>kruskal_mst_edges (networkx/algorithms/tree/mst.py:241) (8 samples, 0.11%)</title><rect x="5.3365%" y="180" width="0.1052%" height="15" fill="rgb(235,183,28)" fg:x="406" fg:w="8"/><text x="5.5865%" y="190.50"></text></g><g><title>add_edges_from (networkx/classes/graph.py:1016) (23 samples, 0.30%)</title><rect x="5.1525%" y="164" width="0.3023%" height="15" fill="rgb(221,5,38)" fg:x="392" fg:w="23"/><text x="5.4025%" y="174.50"></text></g><g><title>christofides (networkx/algorithms/approximation/traveling_salesman.py:176) (40 samples, 0.53%)</title><rect x="4.9422%" y="132" width="0.5258%" height="15" fill="rgb(247,18,42)" fg:x="376" fg:w="40"/><text x="5.1922%" y="142.50"></text></g><g><title>minimum_spanning_tree (networkx/algorithms/tree/mst.py:606) (26 samples, 0.34%)</title><rect x="5.1262%" y="148" width="0.3417%" height="15" fill="rgb(241,131,45)" fg:x="390" fg:w="26"/><text x="5.3762%" y="158.50"></text></g><g><title>copy (networkx/classes/graph.py:1642) (10 samples, 0.13%)</title><rect x="5.4942%" y="148" width="0.1314%" height="15" fill="rgb(249,31,29)" fg:x="418" fg:w="10"/><text x="5.7442%" y="158.50"></text></g><g><title>christofides (networkx/algorithms/approximation/traveling_salesman.py:177) (16 samples, 0.21%)</title><rect x="5.4679%" y="132" width="0.2103%" height="15" fill="rgb(225,111,53)" fg:x="416" fg:w="16"/><text x="5.7179%" y="142.50"></text></g><g><title>christofides (networkx/algorithms/approximation/traveling_salesman.py:178) (12 samples, 0.16%)</title><rect x="5.6782%" y="132" width="0.1577%" height="15" fill="rgb(238,160,17)" fg:x="432" fg:w="12"/><text x="5.9282%" y="142.50"></text></g><g><title>christofides (networkx/algorithms/approximation/traveling_salesman.py:180) (16 samples, 0.21%)</title><rect x="5.9017%" y="132" width="0.2103%" height="15" fill="rgb(214,148,48)" fg:x="449" fg:w="16"/><text x="6.1517%" y="142.50"></text></g><g><title>max_weight_matching (networkx/algorithms/matching.py:1103) (13 samples, 0.17%)</title><rect x="6.5063%" y="196" width="0.1709%" height="15" fill="rgb(232,36,49)" fg:x="495" fg:w="13"/><text x="6.7563%" y="206.50"></text></g><g><title>max_weight_matching (networkx/algorithms/matching.py:391) (9 samples, 0.12%)</title><rect x="6.6772%" y="196" width="0.1183%" height="15" fill="rgb(209,103,24)" fg:x="508" fg:w="9"/><text x="6.9272%" y="206.50"></text></g><g><title>max_weight_matching (networkx/algorithms/matching.py:394) (10 samples, 0.13%)</title><rect x="6.7955%" y="196" width="0.1314%" height="15" fill="rgb(229,88,8)" fg:x="517" fg:w="10"/><text x="7.0455%" y="206.50"></text></g><g><title>max_weight_matching (networkx/algorithms/matching.py:427) (10 samples, 0.13%)</title><rect x="6.9532%" y="196" width="0.1314%" height="15" fill="rgb(213,181,19)" fg:x="529" fg:w="10"/><text x="7.2032%" y="206.50"></text></g><g><title>max_weight_matching (networkx/algorithms/matching.py:839) (16 samples, 0.21%)</title><rect x="7.1635%" y="196" width="0.2103%" height="15" fill="rgb(254,191,54)" fg:x="545" fg:w="16"/><text x="7.4135%" y="206.50"></text></g><g><title>christofides (networkx/algorithms/approximation/traveling_salesman.py:181) (119 samples, 1.56%)</title><rect x="6.1120%" y="132" width="1.5641%" height="15" fill="rgb(241,83,37)" fg:x="465" fg:w="119"/><text x="6.3620%" y="142.50"></text></g><g><title>argmap_min_weight_matching_9 (&lt;class &apos;networkx.utils.decorators.argmap&apos;&gt; compilation 13:5) (118 samples, 1.55%)</title><rect x="6.1251%" y="148" width="1.5510%" height="15" fill="rgb(233,36,39)" fg:x="466" fg:w="118"/><text x="6.3751%" y="158.50"></text></g><g><title>min_weight_matching (networkx/algorithms/matching.py:313) (101 samples, 1.33%)</title><rect x="6.3486%" y="164" width="1.3275%" height="15" fill="rgb(226,3,54)" fg:x="483" fg:w="101"/><text x="6.5986%" y="174.50"></text></g><g><title>argmap_max_weight_matching_14 (&lt;class &apos;networkx.utils.decorators.argmap&apos;&gt; compilation 18:5) (99 samples, 1.30%)</title><rect x="6.3749%" y="180" width="1.3013%" height="15" fill="rgb(245,192,40)" fg:x="485" fg:w="99"/><text x="6.6249%" y="190.50"></text></g><g><title>eulerian_circuit (networkx/algorithms/euler.py:217) (24 samples, 0.32%)</title><rect x="7.7550%" y="164" width="0.3155%" height="15" fill="rgb(238,167,29)" fg:x="590" fg:w="24"/><text x="8.0050%" y="174.50"></text></g><g><title>is_eulerian (networkx/algorithms/euler.py:68) (23 samples, 0.30%)</title><rect x="7.7681%" y="180" width="0.3023%" height="15" fill="rgb(232,182,51)" fg:x="591" fg:w="23"/><text x="8.0181%" y="190.50"></text></g><g><title>wrapper (networkx/classes/backends.py:148) (11 samples, 0.14%)</title><rect x="7.9259%" y="196" width="0.1446%" height="15" fill="rgb(231,60,39)" fg:x="603" fg:w="11"/><text x="8.1759%" y="206.50"></text></g><g><title>argmap_is_connected_19 (&lt;class &apos;networkx.utils.decorators.argmap&apos;&gt; compilation 22:4) (10 samples, 0.13%)</title><rect x="7.9390%" y="212" width="0.1314%" height="15" fill="rgb(208,69,12)" fg:x="604" fg:w="10"/><text x="8.1890%" y="222.50"></text></g><g><title>is_connected (networkx/algorithms/components/connected.py:147) (9 samples, 0.12%)</title><rect x="7.9522%" y="228" width="0.1183%" height="15" fill="rgb(235,93,37)" fg:x="605" fg:w="9"/><text x="8.2022%" y="238.50"></text></g><g><title>eulerian_circuit (networkx/algorithms/euler.py:222) (28 samples, 0.37%)</title><rect x="8.0705%" y="164" width="0.3680%" height="15" fill="rgb(213,116,39)" fg:x="614" fg:w="28"/><text x="8.3205%" y="174.50"></text></g><g><title>copy (networkx/classes/multigraph.py:1100) (21 samples, 0.28%)</title><rect x="8.1625%" y="180" width="0.2760%" height="15" fill="rgb(222,207,29)" fg:x="621" fg:w="21"/><text x="8.4125%" y="190.50"></text></g><g><title>add_edges_from (networkx/classes/multigraph.py:617) (9 samples, 0.12%)</title><rect x="8.3202%" y="196" width="0.1183%" height="15" fill="rgb(206,96,30)" fg:x="633" fg:w="9"/><text x="8.5702%" y="206.50"></text></g><g><title>_multigraph_eulerian_circuit (networkx/algorithms/euler.py:143) (10 samples, 0.13%)</title><rect x="8.5568%" y="180" width="0.1314%" height="15" fill="rgb(218,138,4)" fg:x="651" fg:w="10"/><text x="8.8068%" y="190.50"></text></g><g><title>__call__ (networkx/classes/reportviews.py:432) (8 samples, 0.11%)</title><rect x="8.5831%" y="196" width="0.1052%" height="15" fill="rgb(250,191,14)" fg:x="653" fg:w="8"/><text x="8.8331%" y="206.50"></text></g><g><title>_multigraph_eulerian_circuit (networkx/algorithms/euler.py:149) (17 samples, 0.22%)</title><rect x="8.7145%" y="180" width="0.2234%" height="15" fill="rgb(239,60,40)" fg:x="663" fg:w="17"/><text x="8.9645%" y="190.50"></text></g><g><title>traveling_salesman_problem (networkx/algorithms/approximation/traveling_salesman.py:319) (324 samples, 4.26%)</title><rect x="4.7056%" y="100" width="4.2587%" height="15" fill="rgb(206,27,48)" fg:x="358" fg:w="324"/><text x="4.9556%" y="110.50">trave..</text></g><g><title>argmap_christofides_1 (&lt;class &apos;networkx.utils.decorators.argmap&apos;&gt; compilation 4:4) (323 samples, 4.25%)</title><rect x="4.7187%" y="116" width="4.2455%" height="15" fill="rgb(225,35,8)" fg:x="359" fg:w="323"/><text x="4.9687%" y="126.50">argma..</text></g><g><title>christofides (networkx/algorithms/approximation/traveling_salesman.py:183) (94 samples, 1.24%)</title><rect x="7.7287%" y="132" width="1.2355%" height="15" fill="rgb(250,213,24)" fg:x="588" fg:w="94"/><text x="7.9787%" y="142.50"></text></g><g><title>_shortcutting (networkx/algorithms/approximation/traveling_salesman.py:189) (92 samples, 1.21%)</title><rect x="7.7550%" y="148" width="1.2093%" height="15" fill="rgb(247,123,22)" fg:x="590" fg:w="92"/><text x="8.0050%" y="158.50"></text></g><g><title>eulerian_circuit (networkx/algorithms/euler.py:226) (37 samples, 0.49%)</title><rect x="8.4779%" y="164" width="0.4863%" height="15" fill="rgb(231,138,38)" fg:x="645" fg:w="37"/><text x="8.7279%" y="174.50"></text></g><g><title>&lt;module&gt; (core.py:126) (693 samples, 9.11%)</title><rect x="0.0000%" y="68" width="9.1088%" height="15" fill="rgb(231,145,46)" fg:x="0" fg:w="693"/><text x="0.2500%" y="78.50">&lt;module&gt; (cor..</text></g><g><title>setup (simulation/simulation_multi_agent.py:187) (571 samples, 7.51%)</title><rect x="1.6036%" y="84" width="7.5053%" height="15" fill="rgb(251,118,11)" fg:x="122" fg:w="571"/><text x="1.8536%" y="94.50">setup (sim..</text></g><g><title>draw (matplotlib/image.py:646) (11 samples, 0.14%)</title><rect x="9.2666%" y="356" width="0.1446%" height="15" fill="rgb(217,147,25)" fg:x="705" fg:w="11"/><text x="9.5166%" y="366.50"></text></g><g><title>make_image (matplotlib/image.py:956) (11 samples, 0.14%)</title><rect x="9.2666%" y="372" width="0.1446%" height="15" fill="rgb(247,81,37)" fg:x="705" fg:w="11"/><text x="9.5166%" y="382.50"></text></g><g><title>print_png (matplotlib/backends/backend_agg.py:540) (15 samples, 0.20%)</title><rect x="9.2271%" y="196" width="0.1972%" height="15" fill="rgb(209,12,38)" fg:x="702" fg:w="15"/><text x="9.4771%" y="206.50"></text></g><g><title>draw (matplotlib/backends/backend_agg.py:436) (15 samples, 0.20%)</title><rect x="9.2271%" y="212" width="0.1972%" height="15" fill="rgb(227,1,9)" fg:x="702" fg:w="15"/><text x="9.4771%" y="222.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:73) (15 samples, 0.20%)</title><rect x="9.2271%" y="228" width="0.1972%" height="15" fill="rgb(248,47,43)" fg:x="702" fg:w="15"/><text x="9.4771%" y="238.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:50) (15 samples, 0.20%)</title><rect x="9.2271%" y="244" width="0.1972%" height="15" fill="rgb(221,10,30)" fg:x="702" fg:w="15"/><text x="9.4771%" y="254.50"></text></g><g><title>draw (matplotlib/figure.py:2810) (15 samples, 0.20%)</title><rect x="9.2271%" y="260" width="0.1972%" height="15" fill="rgb(210,229,1)" fg:x="702" fg:w="15"/><text x="9.4771%" y="270.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:132) (15 samples, 0.20%)</title><rect x="9.2271%" y="276" width="0.1972%" height="15" fill="rgb(222,148,37)" fg:x="702" fg:w="15"/><text x="9.4771%" y="286.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:50) (15 samples, 0.20%)</title><rect x="9.2271%" y="292" width="0.1972%" height="15" fill="rgb(234,67,33)" fg:x="702" fg:w="15"/><text x="9.4771%" y="302.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3082) (14 samples, 0.18%)</title><rect x="9.2403%" y="308" width="0.1840%" height="15" fill="rgb(247,98,35)" fg:x="703" fg:w="14"/><text x="9.4903%" y="318.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:132) (14 samples, 0.18%)</title><rect x="9.2403%" y="324" width="0.1840%" height="15" fill="rgb(247,138,52)" fg:x="703" fg:w="14"/><text x="9.4903%" y="334.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:50) (14 samples, 0.18%)</title><rect x="9.2403%" y="340" width="0.1840%" height="15" fill="rgb(213,79,30)" fg:x="703" fg:w="14"/><text x="9.4903%" y="350.50"></text></g><g><title>savefig (matplotlib/pyplot.py:958) (19 samples, 0.25%)</title><rect x="9.2271%" y="116" width="0.2497%" height="15" fill="rgb(246,177,23)" fg:x="702" fg:w="19"/><text x="9.4771%" y="126.50"></text></g><g><title>savefig (matplotlib/figure.py:3019) (19 samples, 0.25%)</title><rect x="9.2271%" y="132" width="0.2497%" height="15" fill="rgb(230,62,27)" fg:x="702" fg:w="19"/><text x="9.4771%" y="142.50"></text></g><g><title>print_figure (matplotlib/backend_bases.py:2319) (19 samples, 0.25%)</title><rect x="9.2271%" y="148" width="0.2497%" height="15" fill="rgb(216,154,8)" fg:x="702" fg:w="19"/><text x="9.4771%" y="158.50"></text></g><g><title>wrapper (matplotlib/backend_bases.py:1648) (19 samples, 0.25%)</title><rect x="9.2271%" y="164" width="0.2497%" height="15" fill="rgb(244,35,45)" fg:x="702" fg:w="19"/><text x="9.4771%" y="174.50"></text></g><g><title>wrapper (matplotlib/_api/deprecation.py:412) (19 samples, 0.25%)</title><rect x="9.2271%" y="180" width="0.2497%" height="15" fill="rgb(251,115,12)" fg:x="702" fg:w="19"/><text x="9.4771%" y="190.50"></text></g><g><title>run (simulation/simulation_multi_agent.py:339) (34 samples, 0.45%)</title><rect x="9.1088%" y="84" width="0.4469%" height="15" fill="rgb(240,54,50)" fg:x="693" fg:w="34"/><text x="9.3588%" y="94.50"></text></g><g><title>print_coordinates_img (simulation/plotting.py:271) (25 samples, 0.33%)</title><rect x="9.2271%" y="100" width="0.3286%" height="15" fill="rgb(233,84,52)" fg:x="702" fg:w="25"/><text x="9.4771%" y="110.50"></text></g><g><title>moveAgents (simulation/simulation_multi_agent.py:210) (15 samples, 0.20%)</title><rect x="9.5952%" y="100" width="0.1972%" height="15" fill="rgb(207,117,47)" fg:x="730" fg:w="15"/><text x="9.8452%" y="110.50"></text></g><g><title>&lt;listcomp&gt; (simulation/simulation_multi_agent.py:210) (12 samples, 0.16%)</title><rect x="9.6346%" y="116" width="0.1577%" height="15" fill="rgb(249,43,39)" fg:x="733" fg:w="12"/><text x="9.8846%" y="126.50"></text></g><g><title>moveAgents (simulation/simulation_multi_agent.py:215) (23 samples, 0.30%)</title><rect x="9.8318%" y="100" width="0.3023%" height="15" fill="rgb(209,38,44)" fg:x="748" fg:w="23"/><text x="10.0818%" y="110.50"></text></g><g><title>isBetween (simulation/mapMaker.py:498) (14 samples, 0.18%)</title><rect x="9.9501%" y="116" width="0.1840%" height="15" fill="rgb(236,212,23)" fg:x="757" fg:w="14"/><text x="10.2001%" y="126.50"></text></g><g><title>Distance (simulation/mapMaker.py:25) (12 samples, 0.16%)</title><rect x="9.9763%" y="132" width="0.1577%" height="15" fill="rgb(242,79,21)" fg:x="759" fg:w="12"/><text x="10.2263%" y="142.50"></text></g><g><title>moveAgents (simulation/simulation_multi_agent.py:226) (9 samples, 0.12%)</title><rect x="10.2524%" y="100" width="0.1183%" height="15" fill="rgb(211,96,35)" fg:x="780" fg:w="9"/><text x="10.5024%" y="110.50"></text></g><g><title>run (simulation/simulation_multi_agent.py:377) (72 samples, 0.95%)</title><rect x="9.5557%" y="84" width="0.9464%" height="15" fill="rgb(253,215,40)" fg:x="727" fg:w="72"/><text x="9.8057%" y="94.50"></text></g><g><title>add_visible_transactions (simulation/node.py:51) (11 samples, 0.14%)</title><rect x="10.6730%" y="116" width="0.1446%" height="15" fill="rgb(211,81,21)" fg:x="812" fg:w="11"/><text x="10.9230%" y="126.50"></text></g><g><title>add_visible_transactions (simulation/node.py:52) (23 samples, 0.30%)</title><rect x="10.8176%" y="116" width="0.3023%" height="15" fill="rgb(208,190,38)" fg:x="823" fg:w="23"/><text x="11.0676%" y="126.50"></text></g><g><title>add_visible_transactions (simulation/node.py:53) (362 samples, 4.76%)</title><rect x="11.1199%" y="116" width="4.7581%" height="15" fill="rgb(235,213,38)" fg:x="846" fg:w="362"/><text x="11.3699%" y="126.50">add_vi..</text></g><g><title>add_visible_transactions (simulation/node.py:63) (21 samples, 0.28%)</title><rect x="15.8780%" y="116" width="0.2760%" height="15" fill="rgb(237,122,38)" fg:x="1208" fg:w="21"/><text x="16.1280%" y="126.50"></text></g><g><title>run (simulation/simulation_multi_agent.py:381) (485 samples, 6.37%)</title><rect x="10.5021%" y="84" width="6.3749%" height="15" fill="rgb(244,218,35)" fg:x="799" fg:w="485"/><text x="10.7521%" y="94.50">run (sim..</text></g><g><title>reSubmitTxs (simulation/node.py:158) (475 samples, 6.24%)</title><rect x="10.6335%" y="100" width="6.2434%" height="15" fill="rgb(240,68,47)" fg:x="809" fg:w="475"/><text x="10.8835%" y="110.50">reSubmit..</text></g><g><title>add_visible_transactions (simulation/node.py:82) (50 samples, 0.66%)</title><rect x="16.2198%" y="116" width="0.6572%" height="15" fill="rgb(210,16,53)" fg:x="1234" fg:w="50"/><text x="16.4698%" y="126.50"></text></g><g><title>run (simulation/simulation_multi_agent.py:387) (23 samples, 0.30%)</title><rect x="16.8770%" y="84" width="0.3023%" height="15" fill="rgb(235,124,12)" fg:x="1284" fg:w="23"/><text x="17.1270%" y="94.50"></text></g><g><title>add_visible_transactions (simulation/node.py:53) (35 samples, 0.46%)</title><rect x="17.2187%" y="100" width="0.4600%" height="15" fill="rgb(224,169,11)" fg:x="1310" fg:w="35"/><text x="17.4687%" y="110.50"></text></g><g><title>run (simulation/simulation_multi_agent.py:388) (172 samples, 2.26%)</title><rect x="17.1793%" y="84" width="2.2608%" height="15" fill="rgb(250,166,2)" fg:x="1307" fg:w="172"/><text x="17.4293%" y="94.50">r..</text></g><g><title>add_visible_transactions (simulation/node.py:63) (133 samples, 1.75%)</title><rect x="17.6919%" y="100" width="1.7482%" height="15" fill="rgb(242,216,29)" fg:x="1346" fg:w="133"/><text x="17.9419%" y="110.50"></text></g><g><title>run (simulation/simulation_multi_agent.py:389) (978 samples, 12.85%)</title><rect x="19.4401%" y="84" width="12.8549%" height="15" fill="rgb(230,116,27)" fg:x="1479" fg:w="978"/><text x="19.6901%" y="94.50">run (simulation/sim..</text></g><g><title>cleanOldTxsAndBlocks (simulation/simulation_multi_agent.py:268) (970 samples, 12.75%)</title><rect x="19.5452%" y="100" width="12.7497%" height="15" fill="rgb(228,99,48)" fg:x="1487" fg:w="970"/><text x="19.7952%" y="110.50">cleanOldTxsAndBlock..</text></g><g><title>transfer_txs_and_blocks (simulation/simulation_multi_agent.py:631) (19 samples, 0.25%)</title><rect x="32.4132%" y="100" width="0.2497%" height="15" fill="rgb(253,11,6)" fg:x="2466" fg:w="19"/><text x="32.6632%" y="110.50"></text></g><g><title>add_visible_blocks (simulation/node.py:167) (17 samples, 0.22%)</title><rect x="32.7024%" y="116" width="0.2234%" height="15" fill="rgb(247,143,39)" fg:x="2488" fg:w="17"/><text x="32.9524%" y="126.50"></text></g><g><title>confirmTxs (simulation/node.py:220) (16 samples, 0.21%)</title><rect x="33.0967%" y="132" width="0.2103%" height="15" fill="rgb(236,97,10)" fg:x="2518" fg:w="16"/><text x="33.3467%" y="142.50"></text></g><g><title>add_confirmed_transactions (simulation/node.py:118) (470 samples, 6.18%)</title><rect x="33.3202%" y="148" width="6.1777%" height="15" fill="rgb(233,208,19)" fg:x="2535" fg:w="470"/><text x="33.5702%" y="158.50">add_conf..</text></g><g><title>add_confirmed_transactions (simulation/node.py:125) (59 samples, 0.78%)</title><rect x="39.5242%" y="148" width="0.7755%" height="15" fill="rgb(216,164,2)" fg:x="3007" fg:w="59"/><text x="39.7742%" y="158.50"></text></g><g><title>add_confirmed_transactions (simulation/node.py:128) (480 samples, 6.31%)</title><rect x="40.3260%" y="148" width="6.3091%" height="15" fill="rgb(220,129,5)" fg:x="3068" fg:w="480"/><text x="40.5760%" y="158.50">add_conf..</text></g><g><title>transfer_txs_and_blocks (simulation/simulation_multi_agent.py:647) (1,069 samples, 14.05%)</title><rect x="32.6893%" y="100" width="14.0510%" height="15" fill="rgb(242,17,10)" fg:x="2487" fg:w="1069"/><text x="32.9393%" y="110.50">transfer_txs_and_bloc..</text></g><g><title>add_visible_blocks (simulation/node.py:181) (1,046 samples, 13.75%)</title><rect x="32.9916%" y="116" width="13.7487%" height="15" fill="rgb(242,107,0)" fg:x="2510" fg:w="1046"/><text x="33.2416%" y="126.50">add_visible_blocks (s..</text></g><g><title>confirmTxs (simulation/node.py:223) (1,021 samples, 13.42%)</title><rect x="33.3202%" y="132" width="13.4201%" height="15" fill="rgb(251,28,31)" fg:x="2535" fg:w="1021"/><text x="33.5702%" y="142.50">confirmTxs (simulati..</text></g><g><title>add_visible_blocks (simulation/node.py:167) (10 samples, 0.13%)</title><rect x="46.7403%" y="116" width="0.1314%" height="15" fill="rgb(233,223,10)" fg:x="3556" fg:w="10"/><text x="46.9903%" y="126.50"></text></g><g><title>confirmTxs (simulation/node.py:220) (15 samples, 0.20%)</title><rect x="47.0426%" y="132" width="0.1972%" height="15" fill="rgb(215,21,27)" fg:x="3579" fg:w="15"/><text x="47.2926%" y="142.50"></text></g><g><title>add_confirmed_transactions (simulation/node.py:118) (443 samples, 5.82%)</title><rect x="47.2660%" y="148" width="5.8228%" height="15" fill="rgb(232,23,21)" fg:x="3596" fg:w="443"/><text x="47.5160%" y="158.50">add_con..</text></g><g><title>add_confirmed_transactions (simulation/node.py:125) (86 samples, 1.13%)</title><rect x="53.0889%" y="148" width="1.1304%" height="15" fill="rgb(244,5,23)" fg:x="4039" fg:w="86"/><text x="53.3389%" y="158.50"></text></g><g><title>add_confirmed_transactions (simulation/node.py:128) (526 samples, 6.91%)</title><rect x="54.2192%" y="148" width="6.9138%" height="15" fill="rgb(226,81,46)" fg:x="4125" fg:w="526"/><text x="54.4692%" y="158.50">add_confi..</text></g><g><title>transfer_txs_and_blocks (simulation/simulation_multi_agent.py:648) (1,104 samples, 14.51%)</title><rect x="46.7403%" y="100" width="14.5110%" height="15" fill="rgb(247,70,30)" fg:x="3556" fg:w="1104"/><text x="46.9903%" y="110.50">transfer_txs_and_block..</text></g><g><title>add_visible_blocks (simulation/node.py:181) (1,086 samples, 14.27%)</title><rect x="46.9769%" y="116" width="14.2744%" height="15" fill="rgb(212,68,19)" fg:x="3574" fg:w="1086"/><text x="47.2269%" y="126.50">add_visible_blocks (si..</text></g><g><title>confirmTxs (simulation/node.py:223) (1,065 samples, 14.00%)</title><rect x="47.2529%" y="132" width="13.9984%" height="15" fill="rgb(240,187,13)" fg:x="3595" fg:w="1065"/><text x="47.5029%" y="142.50">confirmTxs (simulatio..</text></g><g><title>add_visible_transactions (simulation/node.py:46) (41 samples, 0.54%)</title><rect x="61.2645%" y="116" width="0.5389%" height="15" fill="rgb(223,113,26)" fg:x="4661" fg:w="41"/><text x="61.5145%" y="126.50"></text></g><g><title>add_visible_transactions (simulation/node.py:53) (90 samples, 1.18%)</title><rect x="61.9742%" y="116" width="1.1830%" height="15" fill="rgb(206,192,2)" fg:x="4715" fg:w="90"/><text x="62.2242%" y="126.50"></text></g><g><title>add_visible_transactions (simulation/node.py:63) (475 samples, 6.24%)</title><rect x="63.1703%" y="116" width="6.2434%" height="15" fill="rgb(241,108,4)" fg:x="4806" fg:w="475"/><text x="63.4203%" y="126.50">add_visi..</text></g><g><title>transfer_txs_and_blocks (simulation/simulation_multi_agent.py:666) (744 samples, 9.78%)</title><rect x="61.2645%" y="100" width="9.7792%" height="15" fill="rgb(247,173,49)" fg:x="4661" fg:w="744"/><text x="61.5145%" y="110.50">transfer_txs_a..</text></g><g><title>add_visible_transactions (simulation/node.py:82) (118 samples, 1.55%)</title><rect x="69.4926%" y="116" width="1.5510%" height="15" fill="rgb(224,114,35)" fg:x="5287" fg:w="118"/><text x="69.7426%" y="126.50"></text></g><g><title>add_visible_transactions (simulation/node.py:46) (47 samples, 0.62%)</title><rect x="71.0436%" y="116" width="0.6178%" height="15" fill="rgb(245,159,27)" fg:x="5405" fg:w="47"/><text x="71.2936%" y="126.50"></text></g><g><title>add_visible_transactions (simulation/node.py:53) (97 samples, 1.27%)</title><rect x="71.7666%" y="116" width="1.2750%" height="15" fill="rgb(245,172,44)" fg:x="5460" fg:w="97"/><text x="72.0166%" y="126.50"></text></g><g><title>add_visible_transactions (simulation/node.py:63) (526 samples, 6.91%)</title><rect x="73.0415%" y="116" width="6.9138%" height="15" fill="rgb(236,23,11)" fg:x="5557" fg:w="526"/><text x="73.2915%" y="126.50">add_visib..</text></g><g><title>transfer_txs_and_blocks (simulation/simulation_multi_agent.py:668) (769 samples, 10.11%)</title><rect x="71.0436%" y="100" width="10.1078%" height="15" fill="rgb(205,117,38)" fg:x="5405" fg:w="769"/><text x="71.2936%" y="110.50">transfer_txs_an..</text></g><g><title>add_visible_transactions (simulation/node.py:82) (87 samples, 1.14%)</title><rect x="80.0079%" y="116" width="1.1435%" height="15" fill="rgb(237,72,25)" fg:x="6087" fg:w="87"/><text x="80.2579%" y="126.50"></text></g><g><title>add_submitted_transactions (simulation/node.py:94) (8 samples, 0.11%)</title><rect x="81.3354%" y="116" width="0.1052%" height="15" fill="rgb(244,70,9)" fg:x="6188" fg:w="8"/><text x="81.5854%" y="126.50"></text></g><g><title>add_submitted_transactions (simulation/node.py:95) (93 samples, 1.22%)</title><rect x="81.4406%" y="116" width="1.2224%" height="15" fill="rgb(217,125,39)" fg:x="6196" fg:w="93"/><text x="81.6906%" y="126.50"></text></g><g><title>transfer_txs_and_blocks (simulation/simulation_multi_agent.py:673) (114 samples, 1.50%)</title><rect x="81.1909%" y="100" width="1.4984%" height="15" fill="rgb(235,36,10)" fg:x="6177" fg:w="114"/><text x="81.4409%" y="110.50"></text></g><g><title>add_submitted_transactions (simulation/node.py:104) (10 samples, 0.13%)</title><rect x="82.6893%" y="116" width="0.1314%" height="15" fill="rgb(251,123,47)" fg:x="6291" fg:w="10"/><text x="82.9393%" y="126.50"></text></g><g><title>add_submitted_transactions (simulation/node.py:94) (9 samples, 0.12%)</title><rect x="82.8733%" y="116" width="0.1183%" height="15" fill="rgb(221,13,13)" fg:x="6305" fg:w="9"/><text x="83.1233%" y="126.50"></text></g><g><title>add_submitted_transactions (simulation/node.py:95) (108 samples, 1.42%)</title><rect x="82.9916%" y="116" width="1.4196%" height="15" fill="rgb(238,131,9)" fg:x="6314" fg:w="108"/><text x="83.2416%" y="126.50"></text></g><g><title>transfer_txs_and_blocks (simulation/simulation_multi_agent.py:674) (133 samples, 1.75%)</title><rect x="82.6893%" y="100" width="1.7482%" height="15" fill="rgb(211,50,8)" fg:x="6291" fg:w="133"/><text x="82.9393%" y="110.50"></text></g><g><title>add_confirmed_transactions (simulation/node.py:118) (241 samples, 3.17%)</title><rect x="84.4374%" y="116" width="3.1677%" height="15" fill="rgb(245,182,24)" fg:x="6424" fg:w="241"/><text x="84.6874%" y="126.50">add..</text></g><g><title>add_confirmed_transactions (simulation/node.py:125) (26 samples, 0.34%)</title><rect x="87.6183%" y="116" width="0.3417%" height="15" fill="rgb(242,14,37)" fg:x="6666" fg:w="26"/><text x="87.8683%" y="126.50"></text></g><g><title>add_confirmed_transactions (simulation/node.py:128) (54 samples, 0.71%)</title><rect x="87.9600%" y="116" width="0.7098%" height="15" fill="rgb(246,228,12)" fg:x="6692" fg:w="54"/><text x="88.2100%" y="126.50"></text></g><g><title>transfer_txs_and_blocks (simulation/simulation_multi_agent.py:676) (330 samples, 4.34%)</title><rect x="84.4374%" y="100" width="4.3375%" height="15" fill="rgb(213,55,15)" fg:x="6424" fg:w="330"/><text x="84.6874%" y="110.50">trans..</text></g><g><title>add_confirmed_transactions (simulation/node.py:118) (257 samples, 3.38%)</title><rect x="88.7750%" y="116" width="3.3780%" height="15" fill="rgb(209,9,3)" fg:x="6754" fg:w="257"/><text x="89.0250%" y="126.50">add..</text></g><g><title>add_confirmed_transactions (simulation/node.py:125) (29 samples, 0.38%)</title><rect x="92.1924%" y="116" width="0.3812%" height="15" fill="rgb(230,59,30)" fg:x="7014" fg:w="29"/><text x="92.4424%" y="126.50"></text></g><g><title>add_confirmed_transactions (simulation/node.py:128) (61 samples, 0.80%)</title><rect x="92.5736%" y="116" width="0.8018%" height="15" fill="rgb(209,121,21)" fg:x="7043" fg:w="61"/><text x="92.8236%" y="126.50"></text></g><g><title>transfer_txs_and_blocks (simulation/simulation_multi_agent.py:677) (360 samples, 4.73%)</title><rect x="88.7750%" y="100" width="4.7319%" height="15" fill="rgb(220,109,13)" fg:x="6754" fg:w="360"/><text x="89.0250%" y="110.50">transf..</text></g><g><title>add_confirmed_transactions (simulation/node.py:134) (8 samples, 0.11%)</title><rect x="93.4017%" y="116" width="0.1052%" height="15" fill="rgb(232,18,1)" fg:x="7106" fg:w="8"/><text x="93.6517%" y="126.50"></text></g><g><title>run (simulation/simulation_multi_agent.py:393) (4,658 samples, 61.23%)</title><rect x="32.2950%" y="84" width="61.2250%" height="15" fill="rgb(215,41,42)" fg:x="2457" fg:w="4658"/><text x="32.5450%" y="94.50">run (simulation/simulation_multi_agent.py:393)</text></g><g><title>add_confirmed_transactions (simulation/node.py:128) (193 samples, 2.54%)</title><rect x="93.6777%" y="132" width="2.5368%" height="15" fill="rgb(224,123,36)" fg:x="7127" fg:w="193"/><text x="93.9277%" y="142.50">ad..</text></g><g><title>run (simulation/simulation_multi_agent.py:442) (202 samples, 2.66%)</title><rect x="93.6646%" y="84" width="2.6551%" height="15" fill="rgb(240,125,3)" fg:x="7126" fg:w="202"/><text x="93.9146%" y="94.50">ru..</text></g><g><title>add_visible_blocks (simulation/node.py:181) (202 samples, 2.66%)</title><rect x="93.6646%" y="100" width="2.6551%" height="15" fill="rgb(205,98,50)" fg:x="7126" fg:w="202"/><text x="93.9146%" y="110.50">ad..</text></g><g><title>confirmTxs (simulation/node.py:223) (202 samples, 2.66%)</title><rect x="93.6646%" y="116" width="2.6551%" height="15" fill="rgb(205,185,37)" fg:x="7126" fg:w="202"/><text x="93.9146%" y="126.50">co..</text></g><g><title>update_progress (simulation/helpers.py:48) (20 samples, 0.26%)</title><rect x="96.3460%" y="100" width="0.2629%" height="15" fill="rgb(238,207,15)" fg:x="7330" fg:w="20"/><text x="96.5960%" y="110.50"></text></g><g><title>round_ (&lt;__array_function__ internals&gt;:5) (13 samples, 0.17%)</title><rect x="96.4380%" y="116" width="0.1709%" height="15" fill="rgb(213,199,42)" fg:x="7337" fg:w="13"/><text x="96.6880%" y="126.50"></text></g><g><title>round_ (numpy/core/fromnumeric.py:3739) (13 samples, 0.17%)</title><rect x="96.4380%" y="132" width="0.1709%" height="15" fill="rgb(235,201,11)" fg:x="7337" fg:w="13"/><text x="96.6880%" y="142.50"></text></g><g><title>around (&lt;__array_function__ internals&gt;:5) (11 samples, 0.14%)</title><rect x="96.4642%" y="148" width="0.1446%" height="15" fill="rgb(207,46,11)" fg:x="7339" fg:w="11"/><text x="96.7142%" y="158.50"></text></g><g><title>around (numpy/core/fromnumeric.py:3314) (11 samples, 0.14%)</title><rect x="96.4642%" y="164" width="0.1446%" height="15" fill="rgb(241,35,35)" fg:x="7339" fg:w="11"/><text x="96.7142%" y="174.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:54) (9 samples, 0.12%)</title><rect x="96.4905%" y="180" width="0.1183%" height="15" fill="rgb(243,32,47)" fg:x="7341" fg:w="9"/><text x="96.7405%" y="190.50"></text></g><g><title>_wrapit (numpy/core/fromnumeric.py:43) (8 samples, 0.11%)</title><rect x="96.5037%" y="196" width="0.1052%" height="15" fill="rgb(247,202,23)" fg:x="7342" fg:w="8"/><text x="96.7537%" y="206.50"></text></g><g><title>run (simulation/simulation_multi_agent.py:457) (61 samples, 0.80%)</title><rect x="96.3460%" y="84" width="0.8018%" height="15" fill="rgb(219,102,11)" fg:x="7330" fg:w="61"/><text x="96.5960%" y="94.50"></text></g><g><title>update_progress (simulation/helpers.py:49) (41 samples, 0.54%)</title><rect x="96.6088%" y="100" width="0.5389%" height="15" fill="rgb(243,110,44)" fg:x="7350" fg:w="41"/><text x="96.8588%" y="110.50"></text></g><g><title>_shrink (matplotlib/patches.py:2752) (9 samples, 0.12%)</title><rect x="97.3055%" y="260" width="0.1183%" height="15" fill="rgb(222,74,54)" fg:x="7403" fg:w="9"/><text x="97.5555%" y="270.50"></text></g><g><title>_get_path_in_displaycoord (matplotlib/patches.py:4453) (18 samples, 0.24%)</title><rect x="97.2792%" y="212" width="0.2366%" height="15" fill="rgb(216,99,12)" fg:x="7401" fg:w="18"/><text x="97.5292%" y="222.50"></text></g><g><title>_connectionstyle (networkx/drawing/nx_pylab.py:809) (18 samples, 0.24%)</title><rect x="97.2792%" y="228" width="0.2366%" height="15" fill="rgb(226,22,26)" fg:x="7401" fg:w="18"/><text x="97.5292%" y="238.50"></text></g><g><title>__call__ (matplotlib/patches.py:2771) (16 samples, 0.21%)</title><rect x="97.3055%" y="244" width="0.2103%" height="15" fill="rgb(217,163,10)" fg:x="7403" fg:w="16"/><text x="97.5555%" y="254.50"></text></g><g><title>get_path (matplotlib/patches.py:4440) (21 samples, 0.28%)</title><rect x="97.2660%" y="196" width="0.2760%" height="15" fill="rgb(213,25,53)" fg:x="7400" fg:w="21"/><text x="97.5160%" y="206.50"></text></g><g><title>_update_patch_limits (matplotlib/axes/_base.py:2376) (23 samples, 0.30%)</title><rect x="97.2660%" y="180" width="0.3023%" height="15" fill="rgb(252,105,26)" fg:x="7400" fg:w="23"/><text x="97.5160%" y="190.50"></text></g><g><title>draw_networkx (networkx/drawing/nx_pylab.py:304) (29 samples, 0.38%)</title><rect x="97.2003%" y="116" width="0.3812%" height="15" fill="rgb(220,39,43)" fg:x="7395" fg:w="29"/><text x="97.4503%" y="126.50"></text></g><g><title>draw_networkx_edges (networkx/drawing/nx_pylab.py:908) (29 samples, 0.38%)</title><rect x="97.2003%" y="132" width="0.3812%" height="15" fill="rgb(229,68,48)" fg:x="7395" fg:w="29"/><text x="97.4503%" y="142.50"></text></g><g><title>_draw_networkx_edges_fancy_arrow_patch (networkx/drawing/nx_pylab.py:882) (27 samples, 0.35%)</title><rect x="97.2266%" y="148" width="0.3549%" height="15" fill="rgb(252,8,32)" fg:x="7397" fg:w="27"/><text x="97.4766%" y="158.50"></text></g><g><title>add_patch (matplotlib/axes/_base.py:2358) (24 samples, 0.32%)</title><rect x="97.2660%" y="164" width="0.3155%" height="15" fill="rgb(223,20,43)" fg:x="7400" fg:w="24"/><text x="97.5160%" y="174.50"></text></g><g><title>print_graph (simulation/plotting.py:119) (39 samples, 0.51%)</title><rect x="97.1477%" y="100" width="0.5126%" height="15" fill="rgb(229,81,49)" fg:x="7391" fg:w="39"/><text x="97.3977%" y="110.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3046) (12 samples, 0.16%)</title><rect x="97.6735%" y="308" width="0.1577%" height="15" fill="rgb(236,28,36)" fg:x="7431" fg:w="12"/><text x="97.9235%" y="318.50"></text></g><g><title>_update_title_position (matplotlib/axes/_base.py:2996) (11 samples, 0.14%)</title><rect x="97.6866%" y="324" width="0.1446%" height="15" fill="rgb(249,185,26)" fg:x="7432" fg:w="11"/><text x="97.9366%" y="334.50"></text></g><g><title>get_window_extent (matplotlib/text.py:910) (11 samples, 0.14%)</title><rect x="97.6866%" y="340" width="0.1446%" height="15" fill="rgb(249,174,33)" fg:x="7432" fg:w="11"/><text x="97.9366%" y="350.50"></text></g><g><title>_get_layout (matplotlib/text.py:317) (10 samples, 0.13%)</title><rect x="97.6998%" y="356" width="0.1314%" height="15" fill="rgb(233,201,37)" fg:x="7433" fg:w="10"/><text x="97.9498%" y="366.50"></text></g><g><title>get_text_width_height_descent (matplotlib/backends/backend_agg.py:265) (10 samples, 0.13%)</title><rect x="97.6998%" y="372" width="0.1314%" height="15" fill="rgb(221,78,26)" fg:x="7433" fg:w="10"/><text x="97.9498%" y="382.50"></text></g><g><title>parse (matplotlib/mathtext.py:435) (10 samples, 0.13%)</title><rect x="97.6998%" y="388" width="0.1314%" height="15" fill="rgb(250,127,30)" fg:x="7433" fg:w="10"/><text x="97.9498%" y="398.50"></text></g><g><title>_get_path_in_displaycoord (matplotlib/patches.py:4453) (9 samples, 0.12%)</title><rect x="97.8575%" y="356" width="0.1183%" height="15" fill="rgb(230,49,44)" fg:x="7445" fg:w="9"/><text x="98.1075%" y="366.50"></text></g><g><title>_connectionstyle (networkx/drawing/nx_pylab.py:809) (9 samples, 0.12%)</title><rect x="97.8575%" y="372" width="0.1183%" height="15" fill="rgb(229,67,23)" fg:x="7445" fg:w="9"/><text x="98.1075%" y="382.50"></text></g><g><title>__call__ (matplotlib/patches.py:2771) (9 samples, 0.12%)</title><rect x="97.8575%" y="388" width="0.1183%" height="15" fill="rgb(249,83,47)" fg:x="7445" fg:w="9"/><text x="98.1075%" y="398.50"></text></g><g><title>draw (matplotlib/patches.py:4485) (10 samples, 0.13%)</title><rect x="97.8575%" y="340" width="0.1314%" height="15" fill="rgb(215,43,3)" fg:x="7445" fg:w="10"/><text x="98.1075%" y="350.50"></text></g><g><title>print_png (matplotlib/backends/backend_agg.py:540) (41 samples, 0.54%)</title><rect x="97.6604%" y="196" width="0.5389%" height="15" fill="rgb(238,154,13)" fg:x="7430" fg:w="41"/><text x="97.9104%" y="206.50"></text></g><g><title>draw (matplotlib/backends/backend_agg.py:436) (41 samples, 0.54%)</title><rect x="97.6604%" y="212" width="0.5389%" height="15" fill="rgb(219,56,2)" fg:x="7430" fg:w="41"/><text x="97.9104%" y="222.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:73) (41 samples, 0.54%)</title><rect x="97.6604%" y="228" width="0.5389%" height="15" fill="rgb(233,0,4)" fg:x="7430" fg:w="41"/><text x="97.9104%" y="238.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:50) (41 samples, 0.54%)</title><rect x="97.6604%" y="244" width="0.5389%" height="15" fill="rgb(235,30,7)" fg:x="7430" fg:w="41"/><text x="97.9104%" y="254.50"></text></g><g><title>draw (matplotlib/figure.py:2810) (40 samples, 0.53%)</title><rect x="97.6735%" y="260" width="0.5258%" height="15" fill="rgb(250,79,13)" fg:x="7431" fg:w="40"/><text x="97.9235%" y="270.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:132) (40 samples, 0.53%)</title><rect x="97.6735%" y="276" width="0.5258%" height="15" fill="rgb(211,146,34)" fg:x="7431" fg:w="40"/><text x="97.9235%" y="286.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:50) (40 samples, 0.53%)</title><rect x="97.6735%" y="292" width="0.5258%" height="15" fill="rgb(228,22,38)" fg:x="7431" fg:w="40"/><text x="97.9235%" y="302.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3082) (28 samples, 0.37%)</title><rect x="97.8312%" y="308" width="0.3680%" height="15" fill="rgb(235,168,5)" fg:x="7443" fg:w="28"/><text x="98.0812%" y="318.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:132) (28 samples, 0.37%)</title><rect x="97.8312%" y="324" width="0.3680%" height="15" fill="rgb(221,155,16)" fg:x="7443" fg:w="28"/><text x="98.0812%" y="334.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:50) (13 samples, 0.17%)</title><rect x="98.0284%" y="340" width="0.1709%" height="15" fill="rgb(215,215,53)" fg:x="7458" fg:w="13"/><text x="98.2784%" y="350.50"></text></g><g><title>savefig (matplotlib/pyplot.py:958) (49 samples, 0.64%)</title><rect x="97.6604%" y="116" width="0.6441%" height="15" fill="rgb(223,4,10)" fg:x="7430" fg:w="49"/><text x="97.9104%" y="126.50"></text></g><g><title>savefig (matplotlib/figure.py:3019) (49 samples, 0.64%)</title><rect x="97.6604%" y="132" width="0.6441%" height="15" fill="rgb(234,103,6)" fg:x="7430" fg:w="49"/><text x="97.9104%" y="142.50"></text></g><g><title>print_figure (matplotlib/backend_bases.py:2319) (49 samples, 0.64%)</title><rect x="97.6604%" y="148" width="0.6441%" height="15" fill="rgb(227,97,0)" fg:x="7430" fg:w="49"/><text x="97.9104%" y="158.50"></text></g><g><title>wrapper (matplotlib/backend_bases.py:1648) (49 samples, 0.64%)</title><rect x="97.6604%" y="164" width="0.6441%" height="15" fill="rgb(234,150,53)" fg:x="7430" fg:w="49"/><text x="97.9104%" y="174.50"></text></g><g><title>wrapper (matplotlib/_api/deprecation.py:412) (49 samples, 0.64%)</title><rect x="97.6604%" y="180" width="0.6441%" height="15" fill="rgb(228,201,54)" fg:x="7430" fg:w="49"/><text x="97.9104%" y="190.50"></text></g><g><title>print_png (matplotlib/backends/backend_agg.py:541) (8 samples, 0.11%)</title><rect x="98.1993%" y="196" width="0.1052%" height="15" fill="rgb(222,22,37)" fg:x="7471" fg:w="8"/><text x="98.4493%" y="206.50"></text></g><g><title>imsave (matplotlib/image.py:1675) (8 samples, 0.11%)</title><rect x="98.1993%" y="212" width="0.1052%" height="15" fill="rgb(237,53,32)" fg:x="7471" fg:w="8"/><text x="98.4493%" y="222.50"></text></g><g><title>_get_path_in_displaycoord (matplotlib/patches.py:4453) (11 samples, 0.14%)</title><rect x="98.3307%" y="292" width="0.1446%" height="15" fill="rgb(233,25,53)" fg:x="7481" fg:w="11"/><text x="98.5807%" y="302.50"></text></g><g><title>_connectionstyle (networkx/drawing/nx_pylab.py:809) (11 samples, 0.14%)</title><rect x="98.3307%" y="308" width="0.1446%" height="15" fill="rgb(210,40,34)" fg:x="7481" fg:w="11"/><text x="98.5807%" y="318.50"></text></g><g><title>__call__ (matplotlib/patches.py:2771) (11 samples, 0.14%)</title><rect x="98.3307%" y="324" width="0.1446%" height="15" fill="rgb(241,220,44)" fg:x="7481" fg:w="11"/><text x="98.5807%" y="334.50"></text></g><g><title>draw (matplotlib/patches.py:4485) (16 samples, 0.21%)</title><rect x="98.3044%" y="276" width="0.2103%" height="15" fill="rgb(235,28,35)" fg:x="7479" fg:w="16"/><text x="98.5544%" y="286.50"></text></g><g><title>&lt;module&gt; (core.py:127) (6,815 samples, 89.58%)</title><rect x="9.1088%" y="68" width="89.5768%" height="15" fill="rgb(210,56,17)" fg:x="693" fg:w="6815"/><text x="9.3588%" y="78.50">&lt;module&gt; (core.py:127)</text></g><g><title>run (simulation/simulation_multi_agent.py:483) (117 samples, 1.54%)</title><rect x="97.1477%" y="84" width="1.5379%" height="15" fill="rgb(224,130,29)" fg:x="7391" fg:w="117"/><text x="97.3977%" y="94.50"></text></g><g><title>print_graph (simulation/plotting.py:132) (78 samples, 1.03%)</title><rect x="97.6604%" y="100" width="1.0252%" height="15" fill="rgb(235,212,8)" fg:x="7430" fg:w="78"/><text x="97.9104%" y="110.50"></text></g><g><title>savefig (matplotlib/pyplot.py:959) (29 samples, 0.38%)</title><rect x="98.3044%" y="116" width="0.3812%" height="15" fill="rgb(223,33,50)" fg:x="7479" fg:w="29"/><text x="98.5544%" y="126.50"></text></g><g><title>draw_idle (matplotlib/backend_bases.py:2060) (29 samples, 0.38%)</title><rect x="98.3044%" y="132" width="0.3812%" height="15" fill="rgb(219,149,13)" fg:x="7479" fg:w="29"/><text x="98.5544%" y="142.50"></text></g><g><title>draw (matplotlib/backends/backend_agg.py:436) (29 samples, 0.38%)</title><rect x="98.3044%" y="148" width="0.3812%" height="15" fill="rgb(250,156,29)" fg:x="7479" fg:w="29"/><text x="98.5544%" y="158.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:73) (29 samples, 0.38%)</title><rect x="98.3044%" y="164" width="0.3812%" height="15" fill="rgb(216,193,19)" fg:x="7479" fg:w="29"/><text x="98.5544%" y="174.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:50) (29 samples, 0.38%)</title><rect x="98.3044%" y="180" width="0.3812%" height="15" fill="rgb(216,135,14)" fg:x="7479" fg:w="29"/><text x="98.5544%" y="190.50"></text></g><g><title>draw (matplotlib/figure.py:2810) (29 samples, 0.38%)</title><rect x="98.3044%" y="196" width="0.3812%" height="15" fill="rgb(241,47,5)" fg:x="7479" fg:w="29"/><text x="98.5544%" y="206.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:132) (29 samples, 0.38%)</title><rect x="98.3044%" y="212" width="0.3812%" height="15" fill="rgb(233,42,35)" fg:x="7479" fg:w="29"/><text x="98.5544%" y="222.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:50) (29 samples, 0.38%)</title><rect x="98.3044%" y="228" width="0.3812%" height="15" fill="rgb(231,13,6)" fg:x="7479" fg:w="29"/><text x="98.5544%" y="238.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3082) (29 samples, 0.38%)</title><rect x="98.3044%" y="244" width="0.3812%" height="15" fill="rgb(207,181,40)" fg:x="7479" fg:w="29"/><text x="98.5544%" y="254.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:132) (29 samples, 0.38%)</title><rect x="98.3044%" y="260" width="0.3812%" height="15" fill="rgb(254,173,49)" fg:x="7479" fg:w="29"/><text x="98.5544%" y="270.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:50) (13 samples, 0.17%)</title><rect x="98.5147%" y="276" width="0.1709%" height="15" fill="rgb(221,1,38)" fg:x="7495" fg:w="13"/><text x="98.7647%" y="286.50"></text></g><g><title>&lt;module&gt; (core.py:2) (11 samples, 0.14%)</title><rect x="98.7382%" y="68" width="0.1446%" height="15" fill="rgb(206,124,46)" fg:x="7512" fg:w="11"/><text x="98.9882%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 0.14%)</title><rect x="98.7382%" y="84" width="0.1446%" height="15" fill="rgb(249,21,11)" fg:x="7512" fg:w="11"/><text x="98.9882%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 0.14%)</title><rect x="98.7382%" y="100" width="0.1446%" height="15" fill="rgb(222,201,40)" fg:x="7512" fg:w="11"/><text x="98.9882%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (11 samples, 0.14%)</title><rect x="98.7382%" y="116" width="0.1446%" height="15" fill="rgb(235,61,29)" fg:x="7512" fg:w="11"/><text x="98.9882%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (11 samples, 0.14%)</title><rect x="98.7382%" y="132" width="0.1446%" height="15" fill="rgb(219,207,3)" fg:x="7512" fg:w="11"/><text x="98.9882%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.14%)</title><rect x="98.7382%" y="148" width="0.1446%" height="15" fill="rgb(222,56,46)" fg:x="7512" fg:w="11"/><text x="98.9882%" y="158.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (8 samples, 0.11%)</title><rect x="98.9748%" y="388" width="0.1052%" height="15" fill="rgb(239,76,54)" fg:x="7530" fg:w="8"/><text x="99.2248%" y="398.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (8 samples, 0.11%)</title><rect x="98.9748%" y="404" width="0.1052%" height="15" fill="rgb(231,124,27)" fg:x="7530" fg:w="8"/><text x="99.2248%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (8 samples, 0.11%)</title><rect x="98.9748%" y="420" width="0.1052%" height="15" fill="rgb(249,195,6)" fg:x="7530" fg:w="8"/><text x="99.2248%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (8 samples, 0.11%)</title><rect x="98.9748%" y="436" width="0.1052%" height="15" fill="rgb(237,174,47)" fg:x="7530" fg:w="8"/><text x="99.2248%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (8 samples, 0.11%)</title><rect x="98.9748%" y="452" width="0.1052%" height="15" fill="rgb(206,201,31)" fg:x="7530" fg:w="8"/><text x="99.2248%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (8 samples, 0.11%)</title><rect x="98.9748%" y="468" width="0.1052%" height="15" fill="rgb(231,57,52)" fg:x="7530" fg:w="8"/><text x="99.2248%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (8 samples, 0.11%)</title><rect x="98.9748%" y="484" width="0.1052%" height="15" fill="rgb(248,177,22)" fg:x="7530" fg:w="8"/><text x="99.2248%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (8 samples, 0.11%)</title><rect x="98.9748%" y="500" width="0.1052%" height="15" fill="rgb(215,211,37)" fg:x="7530" fg:w="8"/><text x="99.2248%" y="510.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:44) (17 samples, 0.22%)</title><rect x="98.9748%" y="260" width="0.2234%" height="15" fill="rgb(241,128,51)" fg:x="7530" fg:w="17"/><text x="99.2248%" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (17 samples, 0.22%)</title><rect x="98.9748%" y="276" width="0.2234%" height="15" fill="rgb(227,165,31)" fg:x="7530" fg:w="17"/><text x="99.2248%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (17 samples, 0.22%)</title><rect x="98.9748%" y="292" width="0.2234%" height="15" fill="rgb(228,167,24)" fg:x="7530" fg:w="17"/><text x="99.2248%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (17 samples, 0.22%)</title><rect x="98.9748%" y="308" width="0.2234%" height="15" fill="rgb(228,143,12)" fg:x="7530" fg:w="17"/><text x="99.2248%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (17 samples, 0.22%)</title><rect x="98.9748%" y="324" width="0.2234%" height="15" fill="rgb(249,149,8)" fg:x="7530" fg:w="17"/><text x="99.2248%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (17 samples, 0.22%)</title><rect x="98.9748%" y="340" width="0.2234%" height="15" fill="rgb(243,35,44)" fg:x="7530" fg:w="17"/><text x="99.2248%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (17 samples, 0.22%)</title><rect x="98.9748%" y="356" width="0.2234%" height="15" fill="rgb(246,89,9)" fg:x="7530" fg:w="17"/><text x="99.2248%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (17 samples, 0.22%)</title><rect x="98.9748%" y="372" width="0.2234%" height="15" fill="rgb(233,213,13)" fg:x="7530" fg:w="17"/><text x="99.2248%" y="382.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:8) (9 samples, 0.12%)</title><rect x="99.0799%" y="388" width="0.1183%" height="15" fill="rgb(233,141,41)" fg:x="7538" fg:w="9"/><text x="99.3299%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (9 samples, 0.12%)</title><rect x="99.0799%" y="404" width="0.1183%" height="15" fill="rgb(239,167,4)" fg:x="7538" fg:w="9"/><text x="99.3299%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (9 samples, 0.12%)</title><rect x="99.0799%" y="420" width="0.1183%" height="15" fill="rgb(209,217,16)" fg:x="7538" fg:w="9"/><text x="99.3299%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (9 samples, 0.12%)</title><rect x="99.0799%" y="436" width="0.1183%" height="15" fill="rgb(219,88,35)" fg:x="7538" fg:w="9"/><text x="99.3299%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (9 samples, 0.12%)</title><rect x="99.0799%" y="452" width="0.1183%" height="15" fill="rgb(220,193,23)" fg:x="7538" fg:w="9"/><text x="99.3299%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (9 samples, 0.12%)</title><rect x="99.0799%" y="468" width="0.1183%" height="15" fill="rgb(230,90,52)" fg:x="7538" fg:w="9"/><text x="99.3299%" y="478.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:453) (26 samples, 0.34%)</title><rect x="98.8828%" y="164" width="0.3417%" height="15" fill="rgb(252,106,19)" fg:x="7523" fg:w="26"/><text x="99.1328%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (26 samples, 0.34%)</title><rect x="98.8828%" y="180" width="0.3417%" height="15" fill="rgb(206,74,20)" fg:x="7523" fg:w="26"/><text x="99.1328%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (26 samples, 0.34%)</title><rect x="98.8828%" y="196" width="0.3417%" height="15" fill="rgb(230,138,44)" fg:x="7523" fg:w="26"/><text x="99.1328%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (26 samples, 0.34%)</title><rect x="98.8828%" y="212" width="0.3417%" height="15" fill="rgb(235,182,43)" fg:x="7523" fg:w="26"/><text x="99.1328%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (26 samples, 0.34%)</title><rect x="98.8828%" y="228" width="0.3417%" height="15" fill="rgb(242,16,51)" fg:x="7523" fg:w="26"/><text x="99.1328%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (26 samples, 0.34%)</title><rect x="98.8828%" y="244" width="0.3417%" height="15" fill="rgb(248,9,4)" fg:x="7523" fg:w="26"/><text x="99.1328%" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (27 samples, 0.35%)</title><rect x="98.8828%" y="100" width="0.3549%" height="15" fill="rgb(210,31,22)" fg:x="7523" fg:w="27"/><text x="99.1328%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (27 samples, 0.35%)</title><rect x="98.8828%" y="116" width="0.3549%" height="15" fill="rgb(239,54,39)" fg:x="7523" fg:w="27"/><text x="99.1328%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (27 samples, 0.35%)</title><rect x="98.8828%" y="132" width="0.3549%" height="15" fill="rgb(230,99,41)" fg:x="7523" fg:w="27"/><text x="99.1328%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (27 samples, 0.35%)</title><rect x="98.8828%" y="148" width="0.3549%" height="15" fill="rgb(253,106,12)" fg:x="7523" fg:w="27"/><text x="99.1328%" y="158.50"></text></g><g><title>&lt;module&gt; (core.py:3) (28 samples, 0.37%)</title><rect x="98.8828%" y="68" width="0.3680%" height="15" fill="rgb(213,46,41)" fg:x="7523" fg:w="28"/><text x="99.1328%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (28 samples, 0.37%)</title><rect x="98.8828%" y="84" width="0.3680%" height="15" fill="rgb(215,133,35)" fg:x="7523" fg:w="28"/><text x="99.1328%" y="94.50"></text></g><g><title>&lt;module&gt; (core.py:4) (13 samples, 0.17%)</title><rect x="99.2508%" y="68" width="0.1709%" height="15" fill="rgb(213,28,5)" fg:x="7551" fg:w="13"/><text x="99.5008%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (13 samples, 0.17%)</title><rect x="99.2508%" y="84" width="0.1709%" height="15" fill="rgb(215,77,49)" fg:x="7551" fg:w="13"/><text x="99.5008%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (13 samples, 0.17%)</title><rect x="99.2508%" y="100" width="0.1709%" height="15" fill="rgb(248,100,22)" fg:x="7551" fg:w="13"/><text x="99.5008%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (13 samples, 0.17%)</title><rect x="99.2508%" y="116" width="0.1709%" height="15" fill="rgb(208,67,9)" fg:x="7551" fg:w="13"/><text x="99.5008%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (13 samples, 0.17%)</title><rect x="99.2508%" y="132" width="0.1709%" height="15" fill="rgb(219,133,21)" fg:x="7551" fg:w="13"/><text x="99.5008%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (13 samples, 0.17%)</title><rect x="99.2508%" y="148" width="0.1709%" height="15" fill="rgb(246,46,29)" fg:x="7551" fg:w="13"/><text x="99.5008%" y="158.50"></text></g><g><title>&lt;module&gt; (matplotlib/pyplot.py:49) (15 samples, 0.20%)</title><rect x="99.4217%" y="164" width="0.1972%" height="15" fill="rgb(246,185,52)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (15 samples, 0.20%)</title><rect x="99.4217%" y="180" width="0.1972%" height="15" fill="rgb(252,136,11)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (15 samples, 0.20%)</title><rect x="99.4217%" y="196" width="0.1972%" height="15" fill="rgb(219,138,53)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (15 samples, 0.20%)</title><rect x="99.4217%" y="212" width="0.1972%" height="15" fill="rgb(211,51,23)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (15 samples, 0.20%)</title><rect x="99.4217%" y="228" width="0.1972%" height="15" fill="rgb(247,221,28)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (15 samples, 0.20%)</title><rect x="99.4217%" y="244" width="0.1972%" height="15" fill="rgb(251,222,45)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="254.50"></text></g><g><title>&lt;module&gt; (matplotlib/colorbar.py:21) (15 samples, 0.20%)</title><rect x="99.4217%" y="260" width="0.1972%" height="15" fill="rgb(217,162,53)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (15 samples, 0.20%)</title><rect x="99.4217%" y="276" width="0.1972%" height="15" fill="rgb(229,93,14)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (15 samples, 0.20%)</title><rect x="99.4217%" y="292" width="0.1972%" height="15" fill="rgb(209,67,49)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (15 samples, 0.20%)</title><rect x="99.4217%" y="308" width="0.1972%" height="15" fill="rgb(213,87,29)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (15 samples, 0.20%)</title><rect x="99.4217%" y="324" width="0.1972%" height="15" fill="rgb(205,151,52)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (15 samples, 0.20%)</title><rect x="99.4217%" y="340" width="0.1972%" height="15" fill="rgb(253,215,39)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (15 samples, 0.20%)</title><rect x="99.4217%" y="356" width="0.1972%" height="15" fill="rgb(221,220,41)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (15 samples, 0.20%)</title><rect x="99.4217%" y="372" width="0.1972%" height="15" fill="rgb(218,133,21)" fg:x="7564" fg:w="15"/><text x="99.6717%" y="382.50"></text></g><g><title>&lt;module&gt; (matplotlib/projections/__init__.py:55) (11 samples, 0.14%)</title><rect x="99.6714%" y="388" width="0.1446%" height="15" fill="rgb(221,193,43)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="398.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (11 samples, 0.14%)</title><rect x="99.6714%" y="404" width="0.1446%" height="15" fill="rgb(240,128,52)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.14%)</title><rect x="99.6714%" y="420" width="0.1446%" height="15" fill="rgb(253,114,12)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 0.14%)</title><rect x="99.6714%" y="436" width="0.1446%" height="15" fill="rgb(215,223,47)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 0.14%)</title><rect x="99.6714%" y="452" width="0.1446%" height="15" fill="rgb(248,225,23)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (11 samples, 0.14%)</title><rect x="99.6714%" y="468" width="0.1446%" height="15" fill="rgb(250,108,0)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (11 samples, 0.14%)</title><rect x="99.6714%" y="484" width="0.1446%" height="15" fill="rgb(228,208,7)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.14%)</title><rect x="99.6714%" y="500" width="0.1446%" height="15" fill="rgb(244,45,10)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="510.50"></text></g><g><title>&lt;module&gt; (matplotlib/axes/__init__.py:1) (11 samples, 0.14%)</title><rect x="99.6714%" y="516" width="0.1446%" height="15" fill="rgb(207,125,25)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 0.14%)</title><rect x="99.6714%" y="532" width="0.1446%" height="15" fill="rgb(210,195,18)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 0.14%)</title><rect x="99.6714%" y="548" width="0.1446%" height="15" fill="rgb(249,80,12)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (11 samples, 0.14%)</title><rect x="99.6714%" y="564" width="0.1446%" height="15" fill="rgb(221,65,9)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (11 samples, 0.14%)</title><rect x="99.6714%" y="580" width="0.1446%" height="15" fill="rgb(235,49,36)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.14%)</title><rect x="99.6714%" y="596" width="0.1446%" height="15" fill="rgb(225,32,20)" fg:x="7583" fg:w="11"/><text x="99.9214%" y="606.50"></text></g><g><title>&lt;module&gt; (matplotlib/axes/_subplots.py:3) (9 samples, 0.12%)</title><rect x="99.6977%" y="612" width="0.1183%" height="15" fill="rgb(215,141,46)" fg:x="7585" fg:w="9"/><text x="99.9477%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (9 samples, 0.12%)</title><rect x="99.6977%" y="628" width="0.1183%" height="15" fill="rgb(250,160,47)" fg:x="7585" fg:w="9"/><text x="99.9477%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (9 samples, 0.12%)</title><rect x="99.6977%" y="644" width="0.1183%" height="15" fill="rgb(216,222,40)" fg:x="7585" fg:w="9"/><text x="99.9477%" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (9 samples, 0.12%)</title><rect x="99.6977%" y="660" width="0.1183%" height="15" fill="rgb(234,217,39)" fg:x="7585" fg:w="9"/><text x="99.9477%" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (9 samples, 0.12%)</title><rect x="99.6977%" y="676" width="0.1183%" height="15" fill="rgb(207,178,40)" fg:x="7585" fg:w="9"/><text x="99.9477%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (9 samples, 0.12%)</title><rect x="99.6977%" y="692" width="0.1183%" height="15" fill="rgb(221,136,13)" fg:x="7585" fg:w="9"/><text x="99.9477%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (37 samples, 0.49%)</title><rect x="99.4217%" y="100" width="0.4863%" height="15" fill="rgb(249,199,10)" fg:x="7564" fg:w="37"/><text x="99.6717%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (37 samples, 0.49%)</title><rect x="99.4217%" y="116" width="0.4863%" height="15" fill="rgb(249,222,13)" fg:x="7564" fg:w="37"/><text x="99.6717%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (37 samples, 0.49%)</title><rect x="99.4217%" y="132" width="0.4863%" height="15" fill="rgb(244,185,38)" fg:x="7564" fg:w="37"/><text x="99.6717%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (37 samples, 0.49%)</title><rect x="99.4217%" y="148" width="0.4863%" height="15" fill="rgb(236,202,9)" fg:x="7564" fg:w="37"/><text x="99.6717%" y="158.50"></text></g><g><title>&lt;module&gt; (matplotlib/pyplot.py:57) (18 samples, 0.24%)</title><rect x="99.6714%" y="164" width="0.2366%" height="15" fill="rgb(250,229,37)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.24%)</title><rect x="99.6714%" y="180" width="0.2366%" height="15" fill="rgb(206,174,23)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 0.24%)</title><rect x="99.6714%" y="196" width="0.2366%" height="15" fill="rgb(211,33,43)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 0.24%)</title><rect x="99.6714%" y="212" width="0.2366%" height="15" fill="rgb(245,58,50)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 0.24%)</title><rect x="99.6714%" y="228" width="0.2366%" height="15" fill="rgb(244,68,36)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.24%)</title><rect x="99.6714%" y="244" width="0.2366%" height="15" fill="rgb(232,229,15)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="254.50"></text></g><g><title>&lt;module&gt; (matplotlib/figure.py:25) (18 samples, 0.24%)</title><rect x="99.6714%" y="260" width="0.2366%" height="15" fill="rgb(254,30,23)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (18 samples, 0.24%)</title><rect x="99.6714%" y="276" width="0.2366%" height="15" fill="rgb(235,160,14)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.24%)</title><rect x="99.6714%" y="292" width="0.2366%" height="15" fill="rgb(212,155,44)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.24%)</title><rect x="99.6714%" y="308" width="0.2366%" height="15" fill="rgb(226,2,50)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 0.24%)</title><rect x="99.6714%" y="324" width="0.2366%" height="15" fill="rgb(234,177,6)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 0.24%)</title><rect x="99.6714%" y="340" width="0.2366%" height="15" fill="rgb(217,24,9)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 0.24%)</title><rect x="99.6714%" y="356" width="0.2366%" height="15" fill="rgb(220,13,46)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.24%)</title><rect x="99.6714%" y="372" width="0.2366%" height="15" fill="rgb(239,221,27)" fg:x="7583" fg:w="18"/><text x="99.9214%" y="382.50"></text></g><g><title>&lt;module&gt; (core.py:5) (41 samples, 0.54%)</title><rect x="99.4217%" y="68" width="0.5389%" height="15" fill="rgb(222,198,25)" fg:x="7564" fg:w="41"/><text x="99.6717%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (41 samples, 0.54%)</title><rect x="99.4217%" y="84" width="0.5389%" height="15" fill="rgb(211,99,13)" fg:x="7564" fg:w="41"/><text x="99.6717%" y="94.50"></text></g><g><title>all (7,608 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(232,111,31)" fg:x="0" fg:w="7608"/><text x="0.2500%" y="62.50"></text></g></svg></svg>